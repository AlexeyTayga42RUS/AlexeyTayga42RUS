const CANVAS_NODE = document.getElementById('arkanoid');
const CTX = CANVAS_NODE.getContext('2d');

const BALL_RADIUS = 10;

CTX.fillStyle = '#0095DD';
CTX.font = '16px Arial';             

const PADDLE_WIDTH = 75;
const PADDLE_HEIGHT = 10;

const BRICK_ROW_COUNT = 5;
const BRICK_COLUMN_COUNT = 3;
const BRICK_WIDTH = 75;
const BRICK_HEIGHT = 20;
const BRICK_PADDING = 10;
const BRICK_OFFSET = 30;

let ballX = CANVAS_NODE.width / 2;
let ballY = CANVAS_NODE.height - 30;
let dx = 2;
let dy = -2;

let paddleX = (CANVAS_NODE.width - PADDLE_WIDTH) / 2;

let score = 0;
let lives = 3;

const bricks = [];

[
    [{}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}],
    [{}, {}, {}, {}, {}]
]

for (let c=0; c< BRICK_COLUMN_COUNT; c++){
    bricks[c] = [];

    for (let r=0; r<BRICK_ROW_COUNT; r++) {
        bricks[c][r] = {
            x: 0,
            y: 0,
            status: 1
        }
    } 
} 

function drawBall() {
    CTX.beginPath();
    CTX.arc(ballX, ballY, BALL_RADIUS, 0, Math.PI * 2);
    CTX.fill();
    CTX.closePath();
}

function drawPaddle() {
    CTX.beginPath();
    CTX.rect(paddleX, CANVAS_NODE.height - PADDLE_HEIGHT, 
        PADDLE_WIDTH, PADDLE_HEIGHT
    );
    CTX.fill();
    CTX.closePath();
}

function draw() {
    CTX.clearRect(0, 0, CANVAS_NODE.width, CANVAS_NODE.height);
    drawBall();
    drawPaddle();

    ballX += dx;
    ballY += dy;

    requestAnimationFrame(draw);
}

draw();
