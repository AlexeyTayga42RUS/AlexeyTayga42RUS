1. Написать запрос поиска всех книг заданного автора (вывести наименование книг, жанра, возрастное ограничение и ФИО автора)

SELECT CPM.TITLE Name_Of_BooK,
       LISTAGG (DISTINCT G.TITLE, ' ') WITHIN GROUP (ORDER BY G.TITLE) AS Genre,
       L.TITLE AGE_LIMIT,
       CA.LAST_NAME || ' ' || CA.FIRST_NAME || ' ' || CA.PATRONYMIC FullName_AUTHOR
FROM CARD_OF_PM CPM
        JOIN JOURNAL_OF_AUTHORS JA
        	ON CPM.ID_CARD_OF_PM = JA.ID_CARD_OF_PM
    	LEFT JOIN CARD_OF_AUTHOR CA
        	ON JA.ID_AUTHOR = CA.ID_AUTHOR
    	LEFT JOIN JOURNAL_OF_GENRES
 JG
        	ON JG.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN GENRES_OF_PM G
        	ON JG.ID_GENRE = G.ID_GENRE
    	LEFT JOIN JOURNAL_OF_LIMITATIONS JL
        	ON JL.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN LIMITATIONS L
        	ON L.ID_LIMITATION = JL.ID_LIMITATION
WHERE LOWER(CA.LAST_NAME) = 'дойль'
GROUP BY CPM.TITLE, L.TITLE, CA.LAST_NAME, CA.FIRST_NAME, CA.PATRONYMIC;


2.Написать запрос поиска всех книг изданных, определенным издательством 
(позже/ранее заданной даты - вывести наименование книг, жанра, возрастное ограничение, ФИО автора и издательство)

SELECT P.TITLE Publisher_House, CPM.TITLE Name_Of_BooK, CPM.RELEASE_YEAR Year, 
G.TITLE Genre, L.TITLE AGE_LIMIT, CA.LAST_NAME || ' ' || CA.FIRST_NAME || ' ' || CA.PATRONYMIC FullName_AUTHOR
FROM PUBLISHER P
         JOIN CARD_OF_PM CPM
        	ON CPM.ID_PUBLISHER = P.ID_PUBLISHER
        LEFT JOIN JOURNAL_OF_AUTHORS JA
        	ON CPM.ID_CARD_OF_PM = JA.ID_CARD_OF_PM
    	LEFT JOIN CARD_OF_AUTHOR CA
        	ON JA.ID_AUTHOR = CA.ID_AUTHOR
    	LEFT JOIN JOURNAL_OF_GENRES JG
        	ON JG.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN GENRES_OF_PM G
        	ON JG.ID_GENRE = G.ID_GENRE
    	LEFT JOIN JOURNAL_OF_LIMITATIONS JL
        	ON JL.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN LIMITATIONS L
        	ON L.ID_LIMITATION = JL.ID_LIMITATION
WHERE P.TITLE = 'Бета' AND CPM.RELEASE_YEAR > TO_DATE('01.01.2008', 'DD.MM.YYYY');


3.Найти книги по заданным критериям (по жанру, по тегам, по автору, по ограничению)

SELECT CPM.TITLE Name_Of_BooK, CART.TITLE Tag, G.TITLE Genre, L.TITLE AGE_LIMIT,
       CA.LAST_NAME || ' ' || CA.FIRST_NAME || ' ' || CA.PATRONYMIC FullName_AUTHOR
FROM CARD_OF_PM CPM
        JOIN JOURNAL_OF_AUTHORS JA
        	ON CPM.ID_CARD_OF_PM = JA.ID_CARD_OF_PM
    	LEFT JOIN CARD_OF_AUTHOR CA
        	ON JA.ID_AUTHOR = CA.ID_AUTHOR
    	LEFT JOIN JOURNAL_OF_GENRES
 JG
        	ON JG.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN GENRES_OF_PM G
        	ON JG.ID_GENRE = G.ID_GENRE
    	LEFT JOIN JOURNAL_OF_LIMITATIONS JL
        	ON JL.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN LIMITATIONS L
        	ON L.ID_LIMITATION = JL.ID_LIMITATION
	LEFT JOIN JOURNAL_OF_ARTWORKS JART
        	ON JART.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN CARD_OF_ARTWORK CART
        	ON CART.ID_ARTWORK = JART.ID_ARTWORK
WHERE LOWER(CA.LAST_NAME) = 'дойль' AND LOWER(G.TITLE) = 'детектив' 
AND LOWER(L.TITLE) = '5+' AND LOWER(CART.TITLE) = 'увлекательно';

4.Найти ТОП 5 самых популярных книг (по кол-ву выдачи)

WITH TOP_CARD_OF_PM AS (
    SELECT
        CARD_OF_PM.TITLE AS TITLE_CARD_OF_PM,
        COUNT(JUP.ID_CARD_OF_PM) AS COUNT_CARD_OF_PM,
        RANK() OVER (ORDER BY COUNT(JUP.ID_CARD_OF_PM) DESC) AS TOP
    FROM CARD_OF_PM
    JOIN JOURNAL_OF_USAGE_PM JUP 
    ON CARD_OF_PM.ID_CARD_OF_PM = JUP.ID_CARD_OF_PM
    GROUP BY CARD_OF_PM.TITLE
)
SELECT TITLE_CARD_OF_PM, COUNT_CARD_OF_PM, TOP
FROM TOP_CARD_OF_PM
WHERE TOP <= 5;

5. Найти ТОП 5 самых читающих пользователей (за заданный период)

WITH TOP_CLIENT_CARD AS (
    SELECT
        CL.LAST_NAME || ' ' || CL.FIRST_NAME || ' ' || CL.PATRONYMIC AS Client_FullName,
        COUNT(JUP.ID_CLIENT) AS COUNT_ID_CLIENT,RANK() OVER (ORDER BY COUNT(JUP.ID_CLIENT) DESC) AS TOP
    FROM CLIENT_CARD CL
        JOIN JOURNAL_OF_USAGE_PM JUP
        	ON CL.ID_CLIENT = JUP.ID_CLIENT
	WHERE JUP.END_DATE BETWEEN TO_DATE('01.01.2022','DD.MM.YYYY') AND TO_DATE('02.02.2023','DD.MM.YYYY')
    GROUP BY CL.LAST_NAME || ' ' || CL.FIRST_NAME || ' ' || CL.PATRONYMIC)
SELECT Client_FullName, COUNT_ID_CLIENT, TOP
FROM TOP_CLIENT_CARD
WHERE TOP <= 5;


6.Найти список книг, которые не могут быть выданы читателю домой

SELECT TITLE, AMOUNT, PRICE
FROM CARD_OF_PM 
WHERE AMOUNT <= 3 OR PRICE > 900;



7.Запрос, который покажет может ли читатель почитать/получить желаемую книгу

WITH 
PM AS (
SELECT CPM.TITLE Name_Of_BooK, CPM.AMOUNT AMOUNT, L.TITLE LIMIT, 
CPM.PRICE, L.AGE AGE_LIMIT 
FROM CARD_OF_PM CPM
	LEFT JOIN JOURNAL_OF_LIMITATIONS JL
        	ON JL.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	LEFT JOIN LIMITATIONS L
        	ON L.ID_LIMITATION = JL.ID_LIMITATION
WHERE CPM.TITLE = 'Война и мир'),

CL AS (
SELECT 
CC.LAST_NAME || ' ' || CC.FIRST_NAME || ' ' || CC.PATRONYMIC CLIENT_FULLNAME,
V.TITLE VIOL, CC.BIRTH_DATE 
FROM CLIENT_CARD CC
	LEFT JOIN JOURNAL_OF_VIOLATIONS JV
        	ON JV.ID_CLIENT = CC.ID_CLIENT
    	LEFT JOIN VIOLATION V
        	ON V.ID_VIOLATION = JV.ID_VIOLATION
WHERE (CC.LAST_NAME || ' ' || CC.FIRST_NAME || ' ' || CC.PATRONYMIC) = 'Гусев Иван Сергеевич')
SELECT CL.CLIENT_FULLNAME, CL.VIOL, PM.Name_Of_BooK, PM.AMOUNT, PM.LIMIT, PM.PRICE, PM.AGE_LIMIT, CL.BIRTH_DATE, 
CASE
WHEN PM.PRICE > 900 THEN 'Дорогой экземпляр'
WHEN PM.AGE_LIMIT > ((SYSDATE - CL.BIRTH_DATE)/365) THEN 'Возрастное ограничение'
WHEN PM.AMOUNT <= 3 THEN 'Малое количество экземпляров'
ELSE 'Можно получить' 
END
FROM CL
CROSS JOIN PM;


8.Вывести список просроченных книг и их держателей со сроком просрочки

SELECT CPM.TITLE Overdue_book, 
CC.LAST_NAME || ' ' || CC.FIRST_NAME || ' ' || CC.PATRONYMIC Violator,
ROUND(JUP.END_DATE - JUP.START_DATE) Overdue
FROM CARD_OF_PM CPM
        JOIN JOURNAL_OF_USAGE_PM JUP
        	ON CPM.ID_CARD_OF_PM = JUP.ID_CARD_OF_PM
    	LEFT JOIN CLIENT_CARD CC
        	ON JUP.ID_CLIENT = CC.ID_CLIENT
WHERE (JUP.END_DATE - JUP.START_DATE) > 80;


9. Вывести список неблагонадежных читателей

SELECT CC.LAST_NAME || ' ' || CC.FIRST_NAME || ' ' || CC.PATRONYMIC CLIENT_FULLNAME,
V.TITLE
FROM CLIENT_CARD CC
	LEFT JOIN JOURNAL_OF_VIOLATIONS JV
        	ON JV.ID_CLIENT = CC.ID_CLIENT
    	LEFT JOIN VIOLATION V
        	ON V.ID_VIOLATION = JV.ID_VIOLATION
WHERE JV.ID_VIOLATION > 60; 


10.Найти книгу похожую на ранее прочитанную

WITH LASTBOOK AS (
    SELECT CPM.ID_CARD_OF_PM, CPM.TITLE LastReadBook, CA.TITLE TAG
    FROM CLIENT_CARD CC
        JOIN JOURNAL_OF_USAGE_PM JUP
        	ON CC.ID_CLIENT = JUP.ID_CLIENT
    	JOIN CARD_OF_PM CPM 
		ON JUP.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	JOIN  JOURNAL_OF_ARTWORKS JA 
		ON JA.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	JOIN CARD_OF_ARTWORK CA
		ON JA.ID_ARTWORK = CA.ID_ARTWORK
    WHERE (CC.LAST_NAME || ' ' || CC.FIRST_NAME || ' ' || CC.PATRONYMIC) = ('Прокопьева Валентина Александровна')
    ORDER BY JUP.END_DATE DESC
    FETCH FIRST 1 ROWS ONLY)
SELECT CPM.TITLE AS "Название", CA.TITLE AS "Теги"
FROM CARD_OF_PM CPM
        JOIN  JOURNAL_OF_ARTWORKS JA 
		ON JA.ID_CARD_OF_PM = CPM.ID_CARD_OF_PM
    	JOIN CARD_OF_ARTWORK CA
		ON JA.ID_ARTWORK = CA.ID_ARTWORK
	JOIN LASTBOOK LB 	
		ON LB.TAG = CA.TITLE
WHERE LB.LastReadBook != CPM.TITLE
GROUP BY CPM.TITLE, CA.TITLE;